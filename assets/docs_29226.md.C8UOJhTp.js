import{_ as i,c as t,o as s,aj as p,ay as a}from"./chunks/framework.DmTz0k4P.js";const u=JSON.parse('{"title":"如何理解 Composition API 和 Options API","description":"","frontmatter":{"date":"2022-01-20 14:11:07"},"headers":[],"relativePath":"docs/29226.md","filePath":"docs/2.vuejs-use/vuejs3-base/29226.md","lastUpdated":1735962194000}'),e={name:"docs/29226.md"};function n(l,o,r,c,m,d){return s(),t("div",null,[...o[0]||(o[0]=[p('<h1 id="如何理解-composition-api-和-options-api" tabindex="-1">如何理解 Composition API 和 Options API <a class="header-anchor" href="#如何理解-composition-api-和-options-api" aria-label="Permalink to “如何理解 Composition API 和 Options API”">​</a></h1><p>Composition API 带来了什么？</p><ul><li>更好的代码组织</li><li>更好的逻辑复用（专门的面试题）</li><li>更好的类型推导</li></ul><p>比如大量代码时，两者的区别</p><p><img src="'+a+'" alt="composition-api" loading="lazy"></p><blockquote><p>详情参考：<a href="https://v3.cn.vuejs.org/guide/composition-api-introduction.html" target="_blank" rel="noreferrer">https://v3.cn.vuejs.org/guide/composition-api-introduction.html</a></p></blockquote><p>Composition API 和 Options API 如何选择</p><ul><li>不建议共用，会引起混乱</li><li>小型项目，业务逻辑简单，用 Options API</li><li>中大型项目，逻辑复杂，用 Composition API</li></ul><p>别误解 Composition API</p><ul><li>Composition API 属于高级技巧，不是基础必会</li><li>Composition API 是为解决复杂业务逻辑而设计</li><li>Composition API 就像 Hooks 在 React 中的地位</li></ul>',10)])])}const P=i(e,[["render",n]]);export{u as __pageData,P as default};
